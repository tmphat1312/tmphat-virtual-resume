---
import { Icon } from "@/components/icon";
import Linkable from "@/components/linkable.astro";
import type { AsyncEntry } from "@/types/entries";
import type { ImageProps } from "@/types/image";
import { removeTopElement } from "@/utils/html-string";
import { markdownToHtml } from "@/utils/markdown-to-html";

interface Props {
  /** An entry from the `favorites` collection. */
  entry: AsyncEntry<"favorites">;

  /** [Iconify](https://icon-sets.iconify.design/) icon to display for the favorite. */
  icon?: string;

  /** Loading strategy passed to the <Icon /> component. */
  loading?: ImageProps["loading"];

  /** Whether to display an origin address of the favorite's url. **/
  withSource?: boolean;
}

const { entry, icon, loading, withSource } = Astro.props;
const { data: favorite } = await entry;

const subtitle =
  favorite.subtitle && removeTopElement(markdownToHtml(favorite.subtitle));
const url = withSource && new URL(favorite.url);
---

<div class="relative flex overflow-hidden">
  {
    icon && (
      <Icon
        name={icon}
        class="my-0.5 mr-1.5 size-4 text-color-icon-dark"
        {loading}
      />
    )
  }
  <div class="flex w-full">
    <Linkable
      class="text-sm font-medium leading-snug text-color-text-title"
      href={favorite.url}>
      {favorite.title}
    </Linkable>
    {
      subtitle && (
        <div class="ml-1 flex gap-1 text-sm text-color-text-primary [&_a:not(:hover)]:no-underline">
          <div class="">â€”</div>
          <div class="" set:html={subtitle} />
        </div>
      )
    }
    {
      url && (
        <Linkable
          class="ml-auto text-sm text-color-text-secondary"
          href={url.origin}>
          {url.hostname}
        </Linkable>
      )
    }
  </div>
</div>
