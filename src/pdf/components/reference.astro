---
import Img from "@/components/img.astro";
import Linkable from "@/components/linkable.astro";
import RenderedContent from "@/pdf/components/rendered-content.astro";
import type { AsyncEntry } from "@/types/entries";
import { removeTopElement } from "@/utils/html-string";
import { markdownToHtml } from "@/utils/markdown-to-html";

interface Props {
  /** An entry from the `references` collection. */
  entry: AsyncEntry<"references">;
}

const { entry } = Astro.props;
const { data: reference, body, render } = await entry;
const { author } = reference;

const position =
  author.position && removeTopElement(markdownToHtml(author.position));
const relation =
  author.relation && removeTopElement(markdownToHtml(author.relation));
---

<div class="flex flex-col gap-4">
  {body.trim().length > 0 && <RenderedContent render={render} />}
  <div class="flex gap-3">
    {
      author.image && (
        <Img
          class="size-12 rounded-full"
          src={author.image}
          alt={author.name}
          width={96}
          height={96}
        />
      )
    }
    <div>
      <Linkable
        class="text-base font-black leading-tight text-color-text-title"
        href={author.url}>
        {author.name}
      </Linkable>
      {
        position && (
          <div
            class="text-sm font-medium text-color-text-title"
            set:html={position}
          />
        )
      }
      {
        relation && (
          <div
            class="text-sm font-normal text-color-text-primary"
            set:html={relation}
          />
        )
      }
    </div>
  </div>
</div>
