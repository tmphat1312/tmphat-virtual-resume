---
import { Icon } from "@/components/icon";
import type { ContextSlice } from "@/types/context";
import { getGlobalContext } from "@/utils/get-global-context";

const context = getGlobalContext<ContextSlice<"theme" | "i18n">>(Astro);
---

{
  context.theme === "custom" && (
    <button
      id="theme-switch-button"
      class="fixed bottom-5 right-5 rounded-full border border-color-border bg-color-bg-card p-3 text-color-icon-dark shadow"
      aria-label={context.i18n.t("toggle_theme")}>
      <Icon
        data-mode="light"
        name="lucide:sun"
        class="hidden size-5 dark:flex"
      />
      <Icon
        data-mode="dark"
        name="lucide:moon"
        class="flex size-5 dark:hidden"
      />
    </button>
  )
}

<script is:inline define:vars={{ themeConfig: context.theme }}>
  const theme = (() => {
    if (themeConfig === "light" || themeConfig === "dark") {
      return themeConfig;
    }
    if (
      typeof localStorage !== "undefined" &&
      localStorage.getItem("theme") &&
      themeConfig !== "system"
    ) {
      return localStorage.getItem("theme");
    }
    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";
  })();

  if (theme === "light") {
    document.documentElement.classList.remove("dark");
  } else {
    document.documentElement.classList.add("dark");
  }

  if (themeConfig === "custom") {
    window.localStorage.setItem("theme", theme);

    const handleToggleClick = () => {
      const element = document.documentElement;
      element.classList.toggle("dark");

      const isDark = element.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
    };

    document
      .getElementById("theme-switch-button")
      .addEventListener("click", handleToggleClick);
  }
</script>
